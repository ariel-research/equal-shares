version: '3.7'

services:
  frontend:
    build:
      context: ./frontend
      target: prod
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./prod/frontend/nginx/default.conf:/etc/nginx/conf.d/default.conf

  backend:
    build:
      context: ./backend
      target: prod
    restart: unless-stopped
    depends_on:
      - db
    ports:
      - "8000:8000"
    env_file: ./backend/.env
    environment:
      - PG_HOST=db
      - API_RSA_PUBLIC_KEY=/app/equal-shares-api-public-key.pem
      - API_RSA_PRIVATE_KEY=/app/equal-shares-api-private-key.pem
    volumes:
      - ./keys/equal-shares-api-public-key.pem:/app/equal-shares-api-public-key.pem
      - ./keys/equal-shares-api-private-key.pem:/app/equal-shares-api-private-key.pem

  db:
    image: postgres:16
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 10s
      retries: 120
    environment:
      - POSTGRES_USER=equal_shares_user
      - POSTGRES_DB=equal_shares
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data

volumes:
  db_data:
